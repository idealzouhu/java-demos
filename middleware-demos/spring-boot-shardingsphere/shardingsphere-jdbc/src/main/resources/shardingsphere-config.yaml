# ShardingSphere 数据源配置
dataSources:
  ds_0:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    jdbcUrl: jdbc:mysql://127.0.0.1:3306/demo_ds0?useUnicode=true&characterEncoding=UTF-8&rewriteBatchedStatements=true&allowMultiQueries=true&serverTimezone=Asia/Shanghai
    username: root
    password: root

  ds_1:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    jdbcUrl: jdbc:mysql://127.0.0.1:3306/demo_ds1?useUnicode=true&characterEncoding=UTF-8&rewriteBatchedStatements=true&allowMultiQueries=true&serverTimezone=Asia/Shanghai
    username: root
    password: root

# ShardingSphere 规则配置，包含：数据分片、数据加密、读写分离等
rules:
  - !SHARDING
    tables:
      t_user:   # 逻辑表名
        # 真实存在数据库的物理表集合
        actualDataNodes: ds_$->{0..1}.t_user_$->{0..1}
        # 分库策略，缺省表示使用默认分库策略
        databaseStrategy:
          standard:
            shardingColumn: username
            shardingAlgorithmName: user_database_hash_mod
        # 分表策略
        tableStrategy:
          standard:                                        # 用于单分片键的标准分片场景
            shardingColumn: username                       # 自定义分片字段
            shardingAlgorithmName: user_table_hash_mod     # 自定义分片算法名称

    # 数据分片算法定义
    shardingAlgorithms:
      user_database_hash_mod:
        type: CLASS_BASED
        props:
          sharding-count: 2
          table-sharding-count: 2
          strategy: standard
          algorithmClassName: com.zouhu.shardingspherejdbc.sharding.CustomDbHashModShardingAlgorithm
      user_table_hash_mod:
        type: HASH_MOD
        props:
          sharding-count: 2
      user_table_inline_algorithm:
        type: INLINE
        props:
          algorithm-expression: t_user_${(username.hashCode() & Integer.MAX_VALUE) % 2}

# 配置数据源的默认数据库连接池参数
props:
  # 是否打印 Logic SQL和 Actual SQL，开发测试环境建议开放，生产环境建议关闭
  sql-show: true
